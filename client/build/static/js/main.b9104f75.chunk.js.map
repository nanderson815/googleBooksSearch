{"version":3,"sources":["components/Card/Card.js","components/pages/Search.js","components/pages/Saved.js","Utils/API.js","components/Nav/Nav.js","App.js","registerServiceWorker.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","img","alt","title","author","desc","href","link","data-index","id","onClick","action","txt","Search","console","log","data","type","onChange","change","value","val","htmlFor","name","click","map","book","index","components_Card_Card","volumeInfo","key","description","infoLink","imageLinks","thumbnail","save","authors","join","Saved","_id","image","delete","API","search","query","urlquery","replace","axios","get","Nav","react_router_dom","to","App","state","result","savedBooks","searchBooks","then","res","_this","setState","items","catch","err","getBooks","deleteBook","concat","saveBooks","newBook","post","alert","handleInputChange","event","target","handleFormSubmit","preventDefault","this","_this2","components_Nav_Nav","react_router","exact","path","render","pages_Search","pages_Saved","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b9104f75.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"col s12\">\r\n            <div className=\"card horizontal\">\r\n                <div className=\"card-image\">\r\n                    <img src={props.img} alt={props.title} />\r\n                </div>\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{props.title}</span>\r\n                        <h6>{props.author}</h6>\r\n                        <p>{props.desc}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <a href={props.link}>More Info</a>\r\n                        <button className=\"btn\" data-index={props.id} onClick={() => props.action(props.id)}>{props.txt}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from \"../Card/Card\";\r\n\r\nconst Search = (props) => {\r\n    console.log(props.data);\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">Book Search</span>\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input id=\"book\" type=\"text\" className=\"validate\" onChange={props.change} value={props.val} />\r\n                                        <label htmlFor=\"book\">Book</label>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" onClick={props.click}>Submit\r\n                            </button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {props.data.map((book, index) =>\r\n                    <Card\r\n                        title={book.volumeInfo.title}\r\n                        key={index}\r\n                        id={index}\r\n                        desc={book.volumeInfo.description}\r\n                        link={book.volumeInfo.infoLink}\r\n                        img={book.volumeInfo.imageLinks.thumbnail}\r\n                        action={props.save}\r\n                        txt=\"Save Book\"\r\n                        author={book.volumeInfo.authors ? book.volumeInfo.authors.join(\", \") : \"\" } />)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\nconst Saved = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                {props.data.map((book, index) =>\r\n                    <Card\r\n                        title={book.title}\r\n                        key={index}\r\n                        id={book._id}\r\n                        desc={book.description}\r\n                        link={book.link}\r\n                        img={book.image}\r\n                        action={props.delete}\r\n                        txt=\"Delete\"\r\n                        author={book.authors ? book.authors.join(\", \") : \"\"} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved;","import axios from 'axios';\r\nconst URL = 'https://www.googleapis.com/books/v1/volumes?q=';\r\n\r\nexport default {\r\n    search: (query) => {\r\n        let urlquery = query.replace(/ /g, \"+\");\r\n        return axios.get(URL + urlquery);\r\n    }\r\n};","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import styles from './Nav.module.css';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Google Books</Link>\r\n                    <ul id=\"nav-mobile\" className=\"right\">\r\n                        <li className=\"hide-on-med-and-down\"><Link to=\"/search\">Search</Link></li>\r\n                        <li><Link to=\"/saved\">Saved</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Search from \"./components/pages/Search\";\nimport Saved from \"./components/pages/Saved\";\nimport \"./App.css\";\nimport API from \"./Utils/API\";\nimport axios from \"axios\";\n\nimport Nav from \"./components/Nav/Nav\";\n\nclass App extends Component {\n  state = {\n    result: [],\n    search: \"\",\n    savedBooks: []\n  }\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  searchBooks = query => {\n    API.search(query)\n      .then(res => this.setState({ result: res.data.items }))\n      .catch(err => console.log(err));\n  }\n\n  getBooks = () => {\n    axios.get(\"/api/book\")\n      .then((res) => this.setState({ savedBooks: res.data }))\n  }\n\n  deleteBook = id => {\n    axios.delete(`/api/book/${id}`)\n      .then( () => {\n        this.getBooks();\n      })\n  }\n\n  saveBooks = id => {\n    const book = this.state.result[id];\n\n    const newBook = {\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      link: book.volumeInfo.infoLink\n    }\n\n    axios.post(\"/api/book\", newBook)\n      .then(res => console.log(res.data))\n      .then(() => {\n        alert(\"Book Saved!\")\n        this.getBooks();\n      });\n\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    this.setState({ search: value });\n\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchBooks(this.state.search);\n    this.setState({ search: \"\" });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Nav />\n            <div className=\"container\">\n\n              <Route exact path=\"/(|search)\"\n                render={() => <Search\n                  click={this.handleFormSubmit}\n                  change={this.handleInputChange}\n                  val={this.state.search}\n                  data={this.state.result}\n                  save={this.saveBooks} />} />\n\n              <Route exact path=\"/saved\" render={() => <Saved\n                data={this.state.savedBooks}\n                delete={this.deleteBook}\n              />} />\n\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}